{"version":3,"sources":["components/Navbar.js","components/Home.js","components/ModelForm.js","components/Model.js","components/Visualizations.js","App.js","serviceWorker.js","index.js","images/1.svg","images/2.svg","images/3.svg","images/4.svg","images/5.svg","images/6.svg"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","link","color","Navbar","classes","AppBar","position","Toolbar","IconButton","edge","className","aria-label","Typography","variant","to","component","Button","Home","Grid","container","direction","item","xs","sm","src","FirstSVG","height","width","SecondSVG","ThirdSVG","FourthSVG","FifthSVG","SixthSVG","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","input","ModelForm","useState","fileName","setFilename","file","setFile","onSubmit","event","a","preventDefault","tf","model","tensor","fromPixels","ImageData","resizeNearestNeighbor","toFloat","offset","sub","div","expandDims","SKIN_CLASSES","0","1","2","3","4","5","6","console","log","predict","data","predictions","top5","Array","from","map","p","i","probability","sort","b","slice","Container","maxWidth","CssBaseline","Avatar","noValidate","accept","id","multiple","type","onChange","target","files","name","htmlFor","TextField","required","fullWidth","label","autoComplete","value","disabled","justify","Link","href","Model","Visualizations","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.35beb68e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    link: {\n        color: '#FFF'\n    }\n}));\n\nfunction Navbar() {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    My App\n                </Typography>\n                <Link to=\"/\" component={Button} color=\"inherit\">\n                    Home\n                </Link>\n                <Link to=\"/model\" component={Button} color=\"inherit\">\n                    Model\n                </Link>\n                <Link to=\"/viz\" component={Button} color=\"inherit\">\n                    Visualizations\n                </Link>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default Navbar;\n","import React from 'react'\nimport Navbar from './Navbar.js';\nimport { Grid } from '@material-ui/core';\nimport FirstSVG from '../images/1.svg';\nimport SecondSVG from '../images/2.svg';\nimport ThirdSVG from '../images/3.svg';\nimport FourthSVG from '../images/4.svg';\nimport FifthSVG from '../images/5.svg';\nimport SixthSVG from '../images/6.svg';\n\nfunction Home() {\n    return (\n        <Grid container\n        direction=\"column\"\n        >\n            <Grid item>\n                <Navbar />\n            </Grid>\n            <Grid item container>\n                <Grid item xs={0} sm={2}></Grid>\n                <Grid item xs={12} sm={8}>Home\n                    <img src={FirstSVG} height=\"300\" width=\"300\"></img>\n                    <img src={SecondSVG} height=\"300\" width=\"300\"></img>\n                    <img src={ThirdSVG} height=\"300\" width=\"300\"></img>\n                    <img src={FourthSVG} height=\"300\" width=\"300\"></img>\n                    <img src={FifthSVG} height=\"300\" width=\"300\"></img>\n                    <img src={SixthSVG} height=\"300\" width=\"300\"></img>\n                </Grid>\n                <Grid item xs={0} sm={2}></Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Home;\n","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport * as tf from '@tensorflow/tfjs';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nexport default function ModelForm() {\n    const [fileName, setFilename] = useState(\"\"); \n    const [file, setFile] = useState({}); \n    const classes = useStyles();\n\n\n    function onChange(event) {\n        var file = event.target.files[0];\n        setFilename(file.name);\n\n        console.log(file);\n\n        setFile(file);\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n         // Pre-process the image\n\tconst model = await tf.loadLayersModel('https://flamboyant-swartz-753878.netlify.app/final_model_kaggle_version1/model.json');\n\tlet tensor = tf.browser.fromPixels(ImageData(file))\n\t.resizeNearestNeighbor([224,224])\n\t.toFloat();\n\t\n\t\n\tlet offset = tf.scalar(127.5);\n\t\n\ttensor = tensor.sub(offset)\n\t.div(offset)\n\t.expandDims();\n\t\n\t\n\n    const SKIN_CLASSES = {\n        0: 'akiec, Actinic Keratoses (Solar Keratoses) or intraepithelial Carcinoma (Bowen’s disease)',\n        1: 'bcc, Basal Cell Carcinoma',\n        2: 'bkl, Benign Keratosis',\n        3: 'df, Dermatofibroma',\n        4: 'mel, Melanoma',\n        5: 'nv, Melanocytic Nevi',\n        6: 'vasc, Vascular skin lesion'\n    \n    };\n  \n\n    console.log(tensor);\n\t\n\t\n\t// Pass the tensor to the model and call predict on it.\n\t// Predict returns a tensor.\n\t// data() loads the values of the output tensor and returns\n\t// a promise of a typed array when the computation is complete.\n\t// Notice the await and async keywords are used together.\n\tlet predictions = await model.predict(tensor).data();\n\tlet top5 = Array.from(predictions)\n\t\t.map(function (p, i) { // this is Array.map\n\t\t\treturn {\n\t\t\t\tprobability: p,\n\t\t\t\tclassName: SKIN_CLASSES[i] // we are selecting the value from the obj\n\t\t\t};\n\t\t\t\t\n\t\t\t\n\t\t}).sort(function (a, b) {\n\t\t\treturn b.probability - a.probability;\n\t\t\t\t\n        }).slice(0, 3);\n\n    console.log(top5);\n        \n\n\n    }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Upload Photo\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n            <input\n                accept=\"image/*\"\n                className={classes.input}\n                id=\"contained-button-file\"\n                multiple\n                type=\"file\"\n                onChange={onChange}\n            />\n            <label htmlFor=\"contained-button-file\">\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                    Upload\n                </Button>\n            </label>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Upload Skin Lesion Image\"\n                name=\"email\"\n                autoComplete=\"text\"\n                value={fileName}\n                disabled\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Predict\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Click Predict to get top three predictions\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      {/* <Box mt={5}>\n        <Copyright />\n      </Box> */}\n    </Container>\n  );\n}","import React from 'react'\nimport Navbar from './Navbar.js';\nimport { Grid, Button } from '@material-ui/core';\nimport ModelForm from './ModelForm';\n\nfunction Model() {\n    return (\n        <Grid container\n        direction=\"column\"\n        >\n            <Grid item>\n                <Navbar />\n            </Grid>\n            <Grid item container>\n                <Grid item xs={0} sm={2}></Grid>\n                <Grid container item xs={12} sm={8}>\n                    <ModelForm />\n                </Grid>\n                <Grid item xs={0} sm={2}></Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Model;\n","import React from 'react'\nimport Navbar from './Navbar.js';\nimport { Grid } from '@material-ui/core';\n\nfunction Visualizations() {\n    return (\n        <Grid container\n        direction=\"column\"\n        >\n            <Grid item>\n                <Navbar />\n            </Grid>\n            <Grid item container>\n                <Grid item xs={0} sm={2}></Grid>\n                <Grid item xs={12} sm={8}>Viz</Grid>\n                <Grid item xs={0} sm={2}></Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Visualizations\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Model from './components/Model';\nimport Visualizations from './components/Visualizations';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/model\" component={Model} />\n          <Route exact path=\"/viz\" component={Visualizations} /> \n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/1.d3f80c6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/2.5a0db160.svg\";","module.exports = __webpack_public_path__ + \"static/media/3.0890a7c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/4.98fe1ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/5.a6d59602.svg\";","module.exports = __webpack_public_path__ + \"static/media/6.275fdd45.svg\";"],"sourceRoot":""}